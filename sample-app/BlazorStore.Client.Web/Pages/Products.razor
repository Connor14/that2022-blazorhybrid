@using BlazorStore.Api.Contracts
@page "/products"
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<PageTitle>Products</PageTitle>


<div class="ma-4 pa-4">
    <MudText Typo="Typo.h3">Products</MudText>
    <MudText>All of the products in our store!</MudText>

    @if (_products == null)
    {
        <MudText>Loading...</MudText>
    }
    else
    {
        <div class="d-flex flex-row flex-wrap gap-4">
            @foreach (var product in _products)
            {
                <MudPaper Class="pa-4" Style="width: 20%" onclick="@(() => OnRowClick(product))">
                    <MudImage Src="@product.ImageUrl" Style="width: 100%"></MudImage>
                    <MudText Typo="Typo.h6">@product.Name</MudText>
                    <MudText>@product.UnitPrice.ToString("C")</MudText>
                    <MudText Typo="Typo.caption">@product.Description</MudText>
                </MudPaper>
            }
        </div>
    }
</div>

@code {
    private List<Api.Contracts.Product>? _products;

    protected override async Task OnInitializedAsync()
    {
        var result = await HttpClient.GetFromJsonAsync<ResultSet<Api.Contracts.Product>>("Products?startIndex=0&count=30");

        if (result == null)
            return;

        _products = result.Items;
    }

    private void OnRowClick(Api.Contracts.Product product)
    {
        NavigationManager.NavigateTo($"/products/{product.Id}");
    }
}
